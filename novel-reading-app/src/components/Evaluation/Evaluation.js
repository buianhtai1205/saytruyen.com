import React, { useState, useEffect, useRef } from 'react';
import clsx from 'clsx';
import styles from './Evaluation.module.scss';

const initialEvaluations = [
    {
        id: 1,
        user: 'LSP2046',
        title: 'Ng√†y Mai Truy·ªÅn K·ª≥',
        rating: 5,
        content: 'Nh√¢n v·∫≠t: ko th√°nh m·∫´u, ko l·∫°m s√°t nh∆∞ng c≈©ng n·∫øu c·∫ßn gi·∫øt l√† gi·∫øt, c√≥ tinh th·∫ßn tr∆∞·ª£ng nghƒ©a cao\nC·ªët truy·ªán: main ƒëi theo h∆∞·ªõng to√†n d√¢n tu ti√™n, c·ªët truy·ªán xoay quanh vi·ªác nh·ªù h·ªá th·ªëng t·∫°p giao gi√∫p b·∫£n th√¢n m√¨nh gi√†u l√™n, sau ƒë√≥ khi√™n to√†n b·ªô ng∆∞·ªùi b√¨nh th∆∞·ªùng gi√†u l√™n theo\nTh·∫ø gi·ªõi: kh√° hay, b·ªëi c·∫£nh ti√™n ƒë·∫°o nho ƒë·∫°o s·ª•p ƒë·ªï, hi·ªán gi·ªù h·ªá th·ªëng tu luy·ªán theo h∆∞·ªõng ng·ªô ƒë·∫°o. t·ª©c l√† 3600 ngh·ªÅ ai c≈©ng th√†nh ti√™n ƒë∆∞·ª£c.\nh√™ th·ªëng tu luy·ªán ki·ªÉu 3600 ngh·ªÅ, ngh·ªÅ n√†o c≈©ng th√†nh ti√™n, trong ƒë√≥ ngh·ªÅ n√¥ng d√¢n kh·ªï ch√≠t ch√≠t ko ƒë∆∞·ª£c ai coi tr·ªçng cho ƒë·∫øn khi main xu·∫•t hi·ªán.',
        time: '9 gi·ªù tr∆∞·ªõc',
        likes: 0,
    },
    {
        id: 2,
        user: 'V√µ Tho√°i Ch√¢n Nh√¢n',
        title: 'Hokage: T√† ·ªû Konoha',
        rating: 5,
        content: 'Nh√¢n v·∫≠t: th√¥ng minh\nC·ªët truy·ªán: kh√° logic\nTh·∫ø gi·ªõi: ch·ªß y·∫øu l√† ·ªü m·ªπ. th·ªânh tho·∫£ng sang tq du l·ªãch\nn·ªôi dung truy·ªán ok, ko d·∫°ng h√°ng qu√°. hi·∫øm l·∫Øm m·ªõi th·∫•y m·ªôt b·ªô v·ªÅ b√≥ng r·ªï m√† vi·∫øt ·ªïn nh∆∞ th·∫ø n√†y.main m·ªôt v·ª£ (megan fox). 2 nƒÉm ƒë·∫ßu ·ªü laker √¥m ch√¢n o‚Äôneal v·ªõi kobe v·ªÅ sau sang suns l√†m l√£o ƒë·∫°i. c√≥ tham gia v√†o ng√†nh gi·∫£i tr√≠ nh∆∞ ƒë√≥ng phim v·ªõi ca nh·∫°c (ch·ªß y·∫øu l√† nh·ªù copy c√°c √Ω t∆∞·ªüng).ch∆°i ·ªü v·ªã tr√≠ h·∫≠u v·ªá d·∫´n b√≥ng. k·∫øt b·∫°n v·ªõi kh√° nhi·ªÅu dv v√† ca sƒ© n·ªïi ti·∫øng',
        time: '16 gi·ªù tr∆∞·ªõc',
        likes: 0,
    },
    {
        id: 3,
        user: 'Fap Fap ƒê·∫°i S∆∞',
        title: 'Ta Mu·ªën Tu Ti√™n, Ta Kh√¥ng Mu·ªën L√†m √îng Tr√πm Truy·ªÅn Th·ªëng Gi·∫£i Tr√≠',
        rating: 5,
        content: 'Nh√¢n v·∫≠t: c√° ∆∞·ªõp mu·ªëi ƒë√∫ng nghƒ©a( k c√≥ g√¨ th√∫c v√†o ƒë√≠t th√¨ kbh l√†m), iq eq ·ªü m·ª©c ·ªïn, ch·ªß y·∫øu l√† kh√≠ v·∫≠n chi t·ª≠ n√™n ch·∫£ c·∫©n ƒë·ªông n√£o l√†m g√¨\nC·ªët truy·ªán: truy·ªán vi·∫øt ch·ªß y·∫øu l√† chuy·ªán main ƒëi nh·∫∑t c∆° duy√™n v·ªõi c√°c tr·∫≠n chi·∫øn lq ƒë·∫øn( t·ª´ c√°c l√£nh ch√∫a v·ªõi nhau ƒë·∫øn c√°c v∆∞∆°ng qu·ªëc r·ªìi gi·ªõi di·ªán\nTh·∫ø gi·ªõi: b·ªë c·ª•c kh√° logic, main ·ªü v√¥ th∆∞·ª£ng th·∫ø gi·ªõi( k nh·ªõ r√µ t√™n l·∫Øm) n√™n ƒëi ƒë√°nh gi·ªõi kh√°c l√† ch·ªß y·∫øu, h·ªá th·ªëng tu luy·ªán kh√° ·ªïn( main tu k·ªµ sƒ© ngo√†i ra c√≤n c√≥ ph√°p s∆∞ ·ªü th·∫ø gi·ªõi ch√≠nh n·ªØa, theo vƒÉn t√°c th√¨ c√≤n c√≥ c√°c th·∫ø gi·ªõi khoa h·ªçc, tu ti√™n c√°c ki·ªÉu). \nTruy·ªán ph√π h·ª£p v·ªõi ai th√≠ch ƒë·ªçc gi·∫£i tr√≠, √≠t ƒë·ªông n√£o, th·ª≠ c·∫£m gi√°c l√† kh√≠ v·∫≠n chi t·ª≠. X√¢y d·ª±ng nh√¢n v·∫≠t ph·ª• ·ªïn( m√¨nh th·∫•y ·∫•n t∆∞·ª£ng v·ªõi kael-ng∆∞·ªùi ƒë·ªìng h√†nh v·ªõi main, nh∆∞ b·∫£o m·∫´u main v·∫≠y).\nAi mu·ªën ƒë·ªçc th·ªÉ lo·∫°i x√¢y d·ª±ng l√£nh ƒë·ªãa th√¨ xem x√©t khi ƒë·ªçc truy·ªán n√†y v√¨ main n√≥ k quan t√¢m ƒë·∫øn pt l√£nh ƒë·ªãa l·∫Øm, ch·ªß y·∫øu v·ª©t cho m·∫•y th·∫±ng ƒë·ªá l√†m. \nM√¨nh ch·∫•m 7/10',
        time: '1 gi·ªù tr∆∞·ªõc',
        likes: 0,
    },
    {
        id: 4,
        user: '6666t',
        title: 'M·∫Øng Ai Th·ª±c L·ª±c Ph√°i ƒê√¢u',
        rating: 4,
        content: 'h·∫≠u cung gi·∫£i tr√≠ vƒÉn con t√°c n√†y tr∆∞·ªõc gi·ªù v·∫´n lu√¥n l√† th·ªÉ lo·∫°i n√†y (ƒë√¢y l√† b·ªô th·ª© ba ta ƒë·ªçc con t√°c n√†y) b·ªô tr∆∞·ªõc ho√†n th√†nh v·ªõi b·ªô n√†y ch∆∞a ho√†n th√†nh to√†n v√†o top 5 qidi b√™n tr√™n n√≥ to√†n l√† 1-1 (nhi·ªÅu n·ªØ ƒë·ªçc th√¨ ph·∫£i) so v·ªõi b·ªô tr∆∞·ªõc th√¨ b·ªô n√†y nhi·ªÅu ƒëi·ªÉm s·∫£ng kho√°i h∆°n ·ªü ch·ªó tula tr√†ng ( b·ªô tr∆∞·ªõc s·∫£ng ƒëi·ªÉm nhi·ªÅu h∆°n ·ªü t√°c ph·∫©m, ƒë·∫°o t·ª´ nh·∫°c ƒë·∫øn phim) b·ªô n√†y nh·∫°c √≠t ƒëi h·∫≥n. Gi·∫£i tr√≠ vƒÉn ƒëi chuy·ªán c≈©ng nh∆∞ v·∫≠y nh∆∞ng phong c√°ch con t√°c n√†y h√†nh vƒÉn b√™n b·ªÉn nhi·ªÅu ng∆∞·ªùi ki·ªÉm nhi·ªám r·ªìi (lu√¥n v√†o top) th√™m c√°i b·ªô n√†y tula tr√†ng kh√° vui nh√¢n v·∫≠t ph·ª• ra s·ª©c ƒë·ªçc c√≥ k√¨nh. ƒê·ª£i m√£i th·∫•y 700 nh·∫£y h·ªë ngay',
        time: '2 gi·ªù tr∆∞·ªõc',
        likes: 0,
    },
];

function Evaluation() {
    const [evaluations, setEvaluations] = useState(initialEvaluations);
    const [expandedId, setExpandedId] = useState(null); // Track expanded evaluation
    const contentRefs = useRef([]);
    const [showReadMore, setShowReadMore] = useState(Array(initialEvaluations.length).fill(false)); // Track overflow

    const handleLike = (id) => {
        setEvaluations((prev) =>
            prev.map((evaluation) =>
                evaluation.id === id
                    ? { ...evaluation, likes: evaluation.likes + 1 }
                    : evaluation
            )
        );
    };

    const toggleExpand = (id) => {
        setExpandedId(expandedId === id ? null : id); // Toggle expanded state
    };

    useEffect(() => {
        evaluations.forEach((evaluation, index) => {
            const contentElement = contentRefs.current[index];
            console.log(contentElement);
            if (contentElement) {
                const lineHeight = parseFloat(getComputedStyle(contentElement).lineHeight);
                const maxHeight = lineHeight * 10; // 10 lines
                const isOverflowing = contentElement.scrollHeight > maxHeight;

                console.log(isOverflowing);
                
                setShowReadMore(prev => {
                    const newShowReadMore = [...prev];
                    newShowReadMore[index] = isOverflowing;
                    return newShowReadMore;
                });
            }
        });
    }, [evaluations]);

    console.log(showReadMore);


    return (
        <div className={clsx(styles.evaluation)}>
            <h2 className={clsx(styles.title)}>ƒê√ÅNH GI√Å M·ªöI</h2>
            <div className={clsx(styles.evaluationList)}>
                {evaluations.map((evaluation, index) => {
                    const isExpanded = expandedId === evaluation.id;

                    return (
                        <div key={evaluation.id} className={clsx(styles.evaluationItem)}>
                            <div className={clsx(styles.evaluationTitleContainer)}>
                                <div className={clsx(styles.evaluationTitle)}>
                                    <span className={clsx(styles.userName)}>{evaluation.user}</span>
                                    <span className={clsx(styles.evaluationTitleSeparator)}> ƒë√£ ƒë√°nh gi√° </span>
                                    <span className={clsx(styles.title)}>{evaluation.title}</span>
                                </div>
                                <span className={clsx(styles.rating)}>‚≠ê {evaluation.rating}</span>
                            </div>
                            <p
                                ref={(el) => (contentRefs.current[index] = el)}
                                className={clsx(styles.evaluationContent, { [styles.expanded]: isExpanded })}
                            >
                                {evaluation.content}
                            </p>
                            {/* {showReadMore[index] && !isExpanded && (
                                <button onClick={() => toggleExpand(evaluation.id)} className={clsx(styles.readMoreButton)}>
                                    ƒê·ªçc ti·∫øp
                                </button>
                            )} */}
                            <div className={clsx(styles.likeSection)}>
                                <button onClick={() => handleLike(evaluation.id)} className={clsx(styles.likeButton)}>
                                    üëç {evaluation.likes}
                                </button>
                                <span className={clsx(styles.time)}>{evaluation.time}</span>
                            </div>
                        </div>
                    );
                })}
            </div>
        </div>
    );
}

export default Evaluation;