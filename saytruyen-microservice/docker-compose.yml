version: '3.9'

volumes:
    mongo-data:
        external: true
        name: saytruyencom_mongo-data
    redis-data:
        external: true
        name: saytruyen-microservice_redis-data
    mysql-admin-service-data:
        external: true
        name: saytruyen-microservice_mysql-admin-service-data
    mysql-user-service-data:
        external: true
        name: saytruyen-microservice_mysql-user-service-data

networks:
    my-network:
        driver: bridge

services:

    # MongoDB
    mongo:
        image: mongo
        ports:
            - "27017:27017"
        environment:
            MONGO_INITDB_DATABASE: story-database
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        volumes:
            - mongo-data:/data/db
        networks:
            - my-network
        restart: always

    # Mongo Express
    mongo-express:
        image: mongo-express
        ports:
            - "9090:8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: root
            ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
            ME_CONFIG_BASICAUTH: false
        networks:
            - my-network
        restart: always

    # zookeeper
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
        networks:
            - my-network

    # kafka
    kafka:
        image: confluentinc/cp-kafka:latest
        restart: always
        depends_on:
            - zookeeper
        ports:
            - 29092:29092
            - 9092:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_OFFSETS_RETENTION_MINUTES: 15
        networks:
            - my-network

    # redis
    redis:
        image: redis:latest
        restart: always
        ports:
            - 6379:6379
        environment:
            REDIS_PASSWORD: qwerty
        volumes:
            - redis-data:/data
        networks:
            - my-network

    # mysql-admin
    mysql-admin-service:
        image: mysql:8.0
        container_name: mysql-admin-service
        environment:
            MYSQL_DATABASE: admin-database
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "3306:3306"
        volumes:
            - mysql-admin-service-data:/var/lib/mysql
        networks:
            - my-network
        restart: always

    # mysql-user
    mysql-user-service:
        image: mysql:8.0
        container_name: mysql-user-service
        environment:
            MYSQL_DATABASE: user-database
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "3307:3306"
        volumes:
            - mysql-user-service-data:/var/lib/mysql
        networks:
            - my-network
        restart: always

    # discovery-server (Eureka)
    discovery-server:
        image: buianhtai/saytruyen_discovery-server:v1
        container_name: discovery-server
        environment:
            EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
            EUREKA_CLIENT_FETCH_REGISTRY: "false"
            EUREKA_INSTANCE_HOSTNAME: discovery-server
        ports:
            - "8761:8761"
        networks:
            - my-network
        restart: always

    # api-gateway
    api-gateway:
        image: buianhtai/saytruyen_api-gateway:v1
        container_name: api-gateway
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
        ports:
            - "8080:8080"
        networks:
            - my-network
        depends_on:
            - discovery-server
        restart: always

    # admin-service
    admin-service:
        image: buianhtai/saytruyen_admin-service:v1
        container_name: admin-service
        environment:
            SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
        ports:
            - "8081:8081"
        networks:
            - my-network
        depends_on:
            - discovery-server
            - kafka
            - redis
            - mysql-admin-service
        restart: always

    # story-service
    story-service:
        image: buianhtai/saytruyen_story-service:v1
        container_name: story-service
        environment:
            SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
        ports:
            - "8082:8082"
        networks:
            - my-network
        depends_on:
            - discovery-server
            - mongo
            - kafka
        restart: always

    # user-service
    user-service:
        image: buianhtai/saytruyen_user-service:v1
        container_name: user-service
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
        ports:
            - "8083:8083"
        networks:
            - my-network
        depends_on:
            - discovery-server
            - kafka
            - redis
            - mysql-user-service
        restart: always